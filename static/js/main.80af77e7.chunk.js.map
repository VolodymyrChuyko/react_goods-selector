{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","setSelected","good","setState","clearSelected","this","className","classNames","type","onClick","map","isSelected","Math","random","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,cAAgB,WACd,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,oBACEA,UAAWC,IACT,QACA,CAAE,gCAAiCP,IAHvC,SAMGA,EACC,+CACMA,EADN,gBAGE,wBACE,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKD,mBAIlB,sBAIJ,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAAAR,GACT,IAAMS,EAAaX,IAAiBE,EAEpC,OACE,qBACE,UAAQ,OACRI,UAAWC,IACT,CAAE,+BAAgCI,IAHtC,UAQGA,EACC,6BACE,wBACE,UAAQ,eACRH,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKL,cAJhB,iBAUF,6BACE,wBACE,UAAQ,YACRI,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKR,YAAYC,IAJlC,iBAWJ,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MA5BEU,KAAKC,wBAnD5B,GAAyBC,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80af77e7.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  setSelected = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  clearSelected = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classNames(\n            'title',\n            { 'is-flex is-align-items-center': selectedGood },\n          )}\n        >\n          {selectedGood ? (\n            <>\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelected}\n              />\n            </>\n          ) : (\n            'No goods selected'\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={classNames(\n                    { 'has-background-success-light': isSelected },\n                  )}\n                  key={Math.random()}\n                >\n\n                  {isSelected ? (\n                    <td>\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.clearSelected}\n                      >\n                        -\n                      </button>\n                    </td>\n                  ) : (\n                    <td>\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.setSelected(good)}\n                      >\n                        +\n                      </button>\n                    </td>\n                  )}\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}